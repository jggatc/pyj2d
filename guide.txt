PyJ2D Module Guide

PyJ2D module was modelled on Pygame commands that permits scripts coded in Python/Pygame to run in the Java virtual machine (JVM) using the Jython interpreter. To use the PyJ2D module, place the pyj2d folder in the script folder or on the module path. Import pyj2d into the Python script, or use the statement 'import pyj2d as pygame' to maintain the Pygame commands.

To launch a desktop application, JVM must be installed and have Jython. In Linux, Jython may be installable from the package manager. To obtain Jython to install using Java runtime, go to its Jython website (www.jython.org), and follow the instructions to either install Jython or create a standalone jython.jar package. If Jython is installed use command 'jython script.py', or standalone method use command 'java -jar jython.jar script.py'. Running on JVM on the desktop was tested with Jython version 2.21 and 2.52, and should work with Java Web Start.

To create a deployable Java applet, copy Applet.py to the script folder, and edit Applet.py to import your Python/Pygame script, set applet size, and code to link the applet thread to the script application, including script setup, and script execution statements that will update during the applet thread loop. Alternatively, use Applet.py as a guide and edit your Python/Pygame script accordingly. To test, the edited Applet.py script can be run directly on the desktop JVM, which executes the applet code with the pawt module in main(). To create an applet jar that can be deployed online, use the command 'jythonc --core --deep --jar Pyj2d_Applet.jar Applet.py' to package together with Jython dependencies, or 'jythonc --jar Pyj2d_Applet.jar Applet.py' to package alone in which case jython.jar must be included. The mixer function requires Mixer.class (compiled with 'javac Mixer.java') and should be included in the jar with 'jar uvf Pyj2d_Applet.jar pyj2d/Mixer.class'. To update the applet jar with a resources folder containing image and audio files, use command 'jar uvf Pyj2d_Applet.jar resources'. Note that Java applets do not start from main() rather launch from japplet subclass with the same name as the script.

To run the applet on desktop before deployment online, use appletviewer included with JDK package, which tests execution and whether applet conforms to security profile; using this method, unsigned applets were created successfully, but if code is required that violates security such as disk access, the applet needs to be signed for permission. To use appletviewer, place an edited Applet.html together with applet jar(s), and use command 'appletviewer Applet.html'. To deploy online, place applet jar(s) on your server, and to launch from browser, a method that worked is to initiate the applet using JavaScript in Applet.js, after editing applet size, jar name and site URL, that is embedded on the webpage.

Further information is available on the PyJ2D project page (http://gatc.ca/projects/pyj2d/) and in the API documentation (http://gatc.ca/projects/pyj2d/doc/).

